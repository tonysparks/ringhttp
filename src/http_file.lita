import "std/mem"
import "std/string"
import "std/string/builder"
import "std/string/buffer"
import "std/io"
import "std/system"
import "std/libc"
import "std/net"
import "std/assert"

import "std/array"
import "http_common"
import "http_response"
import "http_connection"

public func OpenFile(
    rootPath: String,
    publicServerPath: String,
    path: String,
    file: *File
) : Status {

    if(path.contains($"..") || path.length >= MAX_PATH) {
        return Status.ERROR_REQUEST_PATH_NOT_ALLOWED
    }

    if (publicServerPath.length > 0 && path.length >= publicServerPath.length) {
        path = path.substring(publicServerPath.length)
    }

    var buffer = [MAX_PATH]char{}
    var filepath = StringBufferInit(buffer, MAX_PATH, 0)

    filepath.format("%.*s/%.*s",
        rootPath.length, rootPath.buffer,
        path.length, path.buffer
    )

    var fileStatus = file.open(filepath.cStr(), FileOpenOp.READ_ONLY_BINARY)
    if(fileStatus != FileStatus.Ok) {
        if(fileStatus == FileStatus.IOError) {
            return Status.ERROR_IO_ERROR
        }
        if(fileStatus == FileStatus.FileNotFoundError) {
            return Status.ERROR_FILE_NOT_FOUND
        }
        return Status.ERROR_INVALID_REQUEST_PATH
    }

    return Status.OK
}